generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  email     String    @unique
  password  String
  role      Role      @default(AUTHOR)
  isActive  Boolean   @default(true)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]
}

model Post {
  id          String    @id @default(cuid())
  slug        String    @unique
  title       String
  excerpt     String
  content     String
  mainImage   String
  images      String[]
  tags        String[]
  published   Boolean   @default(false)
  authorName  String?
  authorEmail String?
  views       Int       @default(0)
  likes       Int       @default(0)
  metaTitle   String
  metaDesc    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  authorId    String?
  categoryId  String?
  author      User?     @relation(fields: [authorId], references: [id])
  category    Category? @relation(fields: [categoryId], references: [id])
  postTags    PostTag[]
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String?
  color       String   @default("#3B82F6")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts       Post[]
}

model Tag {
  id        String    @id @default(cuid())
  name      String    @unique
  slug      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  postTags  PostTag[]
}

model PostTag {
  id     String @id @default(cuid())
  postId String
  tagId  String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@unique([postId, tagId])
}

model Contact {
  id        String         @id @default(cuid())
  name      String
  email     String
  phone     String
  message   String
  service   ContactService
  status    ContactStatus  @default(NEW)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model PortfolioProject2 {
  id              String   @id
  name            String
  slug            String   @unique
  image           String
  images          String[]
  description     String
  descriptionRich String?
  url             String
  date            DateTime
  technologies    String[]
}

enum Role {
  ADMIN
  EDITOR
  AUTHOR
}

enum ContactStatus {
  NEW
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}

enum ContactService {
  WEB_DEVELOPMENT
  SEO
  PPC
  OTHER
}
